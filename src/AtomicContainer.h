#pragma once


#include "../dep/litehtml/include/litehtml.h"
#include <UrhoUI.h>


using namespace Atomic;
using namespace Atomic::UrhoUI;


class AtomicContainer
    : public litehtml::document_container
{
    WeakPtr<UrhoUI::UIElement> _element;
public:
    explicit AtomicContainer(UrhoUI::UIElement* element);
    litehtml::uint_ptr create_font(
        const litehtml::tchar_t* faceName, int size, int weight, litehtml::font_style italic, unsigned int decoration,
        litehtml::font_metrics* fm) override;
    void delete_font(litehtml::uint_ptr hFont) override;
    int text_width(const litehtml::tchar_t* text, litehtml::uint_ptr hFont) override;
    void draw_text(
        litehtml::uint_ptr hdc, const litehtml::tchar_t* text, litehtml::uint_ptr hFont, litehtml::web_color color,
        const litehtml::position& pos) override;
    int pt_to_px(int pt) override;
    int get_default_font_size() const override;
    const litehtml::tchar_t* get_default_font_name() const override;
    void draw_list_marker(litehtml::uint_ptr hdc, const litehtml::list_marker& marker) override;
    void load_image(const litehtml::tchar_t* src, const litehtml::tchar_t* baseurl, bool redraw_on_ready) override;
    void get_image_size(const litehtml::tchar_t* src, const litehtml::tchar_t* baseurl, litehtml::size& sz) override;
    void draw_background(litehtml::uint_ptr hdc, const litehtml::background_paint& bg) override;
    void draw_borders(
        litehtml::uint_ptr hdc, const litehtml::borders& borders, const litehtml::position& draw_pos,
        bool root) override;

    void set_caption(const litehtml::tchar_t* caption) override;
    void set_base_url(const litehtml::tchar_t* base_url) override;
    void link(const std::shared_ptr<litehtml::document>& doc, const litehtml::element::ptr& el) override;
    void on_anchor_click(const litehtml::tchar_t* url, const litehtml::element::ptr& el) override;
    void set_cursor(const litehtml::tchar_t* cursor) override;
    void transform_text(litehtml::tstring& text, litehtml::text_transform tt) override;
    void import_css(litehtml::tstring& text, const litehtml::tstring& url, litehtml::tstring& baseurl) override;
    void set_clip(
        const litehtml::position& pos, const litehtml::border_radiuses& bdr_radius, bool valid_x,
        bool valid_y) override;
    void del_clip() override;
    void get_client_rect(litehtml::position& client) const override;
    std::shared_ptr<litehtml::element> create_element(
        const litehtml::tchar_t* tag_name,
        const litehtml::string_map& attributes,
        const std::shared_ptr<litehtml::document>& doc) override;

    void get_media_features(litehtml::media_features& media) const override;
    void get_language(litehtml::tstring& language, litehtml::tstring& culture) const override;

    litehtml::tstring resolve_color(const litehtml::tstring& color) const override;

};


static const char* master_css = "html {\n"
    "    display: block;\n"
    "    height:100%;\n"
    "    width:100%;\n"
    "\tposition: relative;\n"
    "}\n"
    "\n"
    "head {\n"
    "    display: none\n"
    "}\n"
    "\n"
    "meta {\n"
    "    display: none\n"
    "}\n"
    "\n"
    "title {\n"
    "    display: none\n"
    "}\n"
    "\n"
    "link {\n"
    "    display: none\n"
    "}\n"
    "\n"
    "style {\n"
    "    display: none\n"
    "}\n"
    "\n"
    "script {\n"
    "    display: none\n"
    "}\n"
    "\n"
    "body {\n"
    "\tdisplay:block; \n"
    "\tmargin:8px; \n"
    "    height:100%;\n"
    "    width:100%;\n"
    "}\n"
    "\n"
    "p {\n"
    "\tdisplay:block; \n"
    "\tmargin-top:1em; \n"
    "\tmargin-bottom:1em;\n"
    "}\n"
    "\n"
    "b, strong {\n"
    "\tdisplay:inline; \n"
    "\tfont-weight:bold;\n"
    "}\n"
    "\n"
    "i, em {\n"
    "\tdisplay:inline; \n"
    "\tfont-style:italic;\n"
    "}\n"
    "\n"
    "center \n"
    "{\n"
    "\ttext-align:center;\n"
    "\tdisplay:block;\n"
    "}\n"
    "\n"
    "a:link\n"
    "{\n"
    "\ttext-decoration: underline;\n"
    "\tcolor: #00f;\n"
    "\tcursor: pointer;\n"
    "}\n"
    "\n"
    "h1, h2, h3, h4, h5, h6, div {\n"
    "\tdisplay:block;\n"
    "}\n"
    "\n"
    "h1 {\n"
    "\tfont-weight:bold; \n"
    "\tmargin-top:0.67em; \n"
    "\tmargin-bottom:0.67em; \n"
    "\tfont-size: 2em;\n"
    "}\n"
    "\n"
    "h2 {\n"
    "\tfont-weight:bold; \n"
    "\tmargin-top:0.83em; \n"
    "\tmargin-bottom:0.83em; \n"
    "\tfont-size: 1.5em;\n"
    "}\n"
    "\n"
    "h3 {\n"
    "\tfont-weight:bold; \n"
    "\tmargin-top:1em; \n"
    "\tmargin-bottom:1em; \n"
    "\tfont-size:1.17em;\n"
    "}\n"
    "\n"
    "h4 {\n"
    "\tfont-weight:bold; \n"
    "\tmargin-top:1.33em; \n"
    "\tmargin-bottom:1.33em\n"
    "}\n"
    "\n"
    "h5 {\n"
    "\tfont-weight:bold; \n"
    "\tmargin-top:1.67em; \n"
    "\tmargin-bottom:1.67em;\n"
    "\tfont-size:.83em;\n"
    "}\n"
    "\n"
    "h6 {\n"
    "\tfont-weight:bold; \n"
    "\tmargin-top:2.33em; \n"
    "\tmargin-bottom:2.33em;\n"
    "\tfont-size:.67em;\n"
    "} \n"
    "\n"
    "br {\n"
    "\tdisplay:inline-block;\n"
    "}\n"
    "\n"
    "br[clear=\"all\"]\n"
    "{\n"
    "\tclear:both;\n"
    "}\n"
    "\n"
    "br[clear=\"left\"]\n"
    "{\n"
    "\tclear:left;\n"
    "}\n"
    "\n"
    "br[clear=\"right\"]\n"
    "{\n"
    "\tclear:right;\n"
    "}\n"
    "\n"
    "span {\n"
    "\tdisplay:inline\n"
    "}\n"
    "\n"
    "img {\n"
    "\tdisplay: inline-block;\n"
    "}\n"
    "\n"
    "img[align=\"right\"]\n"
    "{\n"
    "\tfloat: right;\n"
    "}\n"
    "\n"
    "img[align=\"left\"]\n"
    "{\n"
    "\tfloat: left;\n"
    "}\n"
    "\n"
    "hr {\n"
    "    display: block;\n"
    "    margin-top: 0.5em;\n"
    "    margin-bottom: 0.5em;\n"
    "    margin-left: auto;\n"
    "    margin-right: auto;\n"
    "    border-style: inset;\n"
    "    border-width: 1px\n"
    "}\n"
    "\n"
    "\n"
    "/***************** TABLES ********************/\n"
    "\n"
    "table {\n"
    "    display: table;\n"
    "    border-collapse: separate;\n"
    "    border-spacing: 2px;\n"
    "    border-top-color:gray;\n"
    "    border-left-color:gray;\n"
    "    border-bottom-color:black;\n"
    "    border-right-color:black;\n"
    "}\n"
    "\n"
    "tbody, tfoot, thead {\n"
    "\tdisplay:table-row-group;\n"
    "\tvertical-align:middle;\n"
    "}\n"
    "\n"
    "tr {\n"
    "    display: table-row;\n"
    "    vertical-align: inherit;\n"
    "    border-color: inherit;\n"
    "}\n"
    "\n"
    "td, th {\n"
    "    display: table-cell;\n"
    "    vertical-align: inherit;\n"
    "    border-width:1px;\n"
    "    padding:1px;\n"
    "}\n"
    "\n"
    "th {\n"
    "\tfont-weight: bold;\n"
    "}\n"
    "\n"
    "table[border] {\n"
    "    border-style:solid;\n"
    "}\n"
    "\n"
    "table[border|=0] {\n"
    "    border-style:none;\n"
    "}\n"
    "\n"
    "table[border] td, table[border] th {\n"
    "    border-style:solid;\n"
    "    border-top-color:black;\n"
    "    border-left-color:black;\n"
    "    border-bottom-color:gray;\n"
    "    border-right-color:gray;\n"
    "}\n"
    "\n"
    "table[border|=0] td, table[border|=0] th {\n"
    "    border-style:none;\n"
    "}\n"
    "\n"
    "caption {\n"
    "\tdisplay: table-caption;\n"
    "}\n"
    "\n"
    "td[nowrap], th[nowrap] {\n"
    "\twhite-space:nowrap;\n"
    "}\n"
    "\n"
    "tt, code, kbd, samp {\n"
    "    font-family: monospace\n"
    "}\n"
    "\n"
    "pre, xmp, plaintext, listing {\n"
    "    display: block;\n"
    "    font-family: monospace;\n"
    "    white-space: pre;\n"
    "    margin: 1em 0\n"
    "}\n"
    "\n"
    "/***************** LISTS ********************/\n"
    "\n"
    "ul, menu, dir {\n"
    "    display: block;\n"
    "    list-style-type: disc;\n"
    "    margin-top: 1em;\n"
    "    margin-bottom: 1em;\n"
    "    margin-left: 0;\n"
    "    margin-right: 0;\n"
    "    padding-left: 40px\n"
    "}\n"
    "\n"
    "ol {\n"
    "    display: block;\n"
    "    list-style-type: decimal;\n"
    "    margin-top: 1em;\n"
    "    margin-bottom: 1em;\n"
    "    margin-left: 0;\n"
    "    margin-right: 0;\n"
    "    padding-left: 40px\n"
    "}\n"
    "\n"
    "li {\n"
    "    display: list-item;\n"
    "}\n"
    "\n"
    "ul ul, ol ul {\n"
    "    list-style-type: circle;\n"
    "}\n"
    "\n"
    "ol ol ul, ol ul ul, ul ol ul, ul ul ul {\n"
    "    list-style-type: square;\n"
    "}\n"
    "\n"
    "dd {\n"
    "    display: block;\n"
    "    margin-left: 40px;\n"
    "}\n"
    "\n"
    "dl {\n"
    "    display: block;\n"
    "    margin-top: 1em;\n"
    "    margin-bottom: 1em;\n"
    "    margin-left: 0;\n"
    "    margin-right: 0;\n"
    "}\n"
    "\n"
    "dt {\n"
    "    display: block;\n"
    "}\n"
    "\n"
    "ol ul, ul ol, ul ul, ol ol {\n"
    "    margin-top: 0;\n"
    "    margin-bottom: 0\n"
    "}\n"
    "\n"
    "blockquote {\n"
    "\tdisplay: block;\n"
    "\tmargin-top: 1em;\n"
    "\tmargin-bottom: 1em;\n"
    "\tmargin-left: 40px;\n"
    "\tmargin-left: 40px;\n"
    "}\n"
    "\n"
    "/*********** FORM ELEMENTS ************/\n"
    "\n"
    "form {\n"
    "\tdisplay: block;\n"
    "\tmargin-top: 0em;\n"
    "}\n"
    "\n"
    "option {\n"
    "\tdisplay: none;\n"
    "}\n"
    "\n"
    "input, textarea, keygen, select, button, isindex {\n"
    "\tmargin: 0em;\n"
    "\tcolor: initial;\n"
    "\tline-height: normal;\n"
    "\ttext-transform: none;\n"
    "\ttext-indent: 0;\n"
    "\ttext-shadow: none;\n"
    "\tdisplay: inline-block;\n"
    "}\n"
    "input[type=\"hidden\"] {\n"
    "\tdisplay: none;\n"
    "}\n"
    "\n"
    "\n"
    "article, aside, footer, header, hgroup, nav, section \n"
    "{\n"
    "\tdisplay: block;\n"
    "}\n"
    "";